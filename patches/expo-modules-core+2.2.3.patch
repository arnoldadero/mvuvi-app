diff --git a/node_modules/expo-modules-core/src/NativeViewManagerAdapter.native.tsx b/node_modules/expo-modules-core/src/NativeViewManagerAdapter.native.tsx
index 75be9db..3e5e2e9 100644
--- a/node_modules/expo-modules-core/src/NativeViewManagerAdapter.native.tsx
+++ b/node_modules/expo-modules-core/src/NativeViewManagerAdapter.native.tsx
@@ -3,8 +3,7 @@
 'use client';
 
 import React from 'react';
-import { NativeModules, NativeMethods, HostComponent, findNodeHandle } from 'react-native';
-import * as NativeComponentRegistry from 'react-native/Libraries/NativeComponent/NativeComponentRegistry';
+import { NativeModules, NativeMethods, HostComponent, findNodeHandle, requireNativeComponent as rnRequireNativeComponent } from 'react-native';
 
 import { requireNativeModule } from './requireNativeModule';
 
@@ -26,19 +25,7 @@ const nativeComponentsCache = new Map<string, HostComponent<any>>();
  * Requires a React Native component using the static view config from an Expo module.
  */
 function requireNativeComponent<Props>(viewName: string): HostComponent<Props> {
-  return NativeComponentRegistry.get<Props>(viewName, () => {
-    const viewModuleName = viewName.replace('ViewManagerAdapter_', '');
-    const expoViewConfig = globalThis.expo?.getViewConfig(viewModuleName);
-
-    if (!expoViewConfig) {
-      console.warn('Unable to get the view config for %s', viewModuleName);
-    }
-
-    return {
-      uiViewClassName: viewName,
-      ...expoViewConfig,
-    };
-  });
+  return rnRequireNativeComponent<Props>(viewName);
 }
 
 /**
